{"version":3,"sources":["selector.js","actions/mainActions.js","reducers/constant.js","components/Loader/Loader.js","components/SearchPage/SearchPage.js","components/MovieItem/MovieItem.js","containers/App.js","serviceWorker.js","reducers/store.js","index.js"],"names":["getfilms","state","films","getFilm","film","getSearchValue","searchedValue","getLoadingStatus","loaded","getTotalResult","totalResults","getCurrentPage","currentPage","getSearchedfilms","createSelector","searchValue","filter","Title","toLowerCase","includes","getfilmsAPI","name","page","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","url","newfilm","wrap","_context","prev","next","URL","axios","get","sent","data","Response","type","payload","abrupt","stop","this","_x","apply","arguments","IMDbID","_ref2","_callee2","_context2","console","log","slice","_x2","searchfilms","value","Loader","react_default","createElement","className","history","createHistory","searchPage","location","search","props","onInputChange","films5","step","_this$props","total","handleNext5","handlePrev5","totalStep","toFixed","react","length","placeholder","onChange","target","map","index","NavLink","key","to","concat","imdbID","Poster","style","maxWidth","height","src","alt","Year","components_Loader_Loader","role","onClick","href","Component","MovieItem","match","background","exact","BoxOffice","DVD","imdbRating","Type","Actors","Plot","Website","withRouter","connect","selector","objectSpread","bindActionCreators","mainActions","App","next5","handleSearchFilm","_this","handleNext5Films","setState","handlePrev5Films","handleAddNewFilm","_this2","myFilm","timerID","setInterval","clearInterval","_this3","searchedfilms","Switch","Route","path","render","SearchPage_SearchPage","onAddNewFilm","component","Boolean","window","hostname","initialState","errorNewFilm","store","createStore","undefined","action","Search","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84c12187.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const getfilms = state => state.films;\nexport const getFilm = state => state.film;\nexport const getSearchValue = state => state.searchedValue;\nexport const getLoadingStatus = state => state.loaded;\nexport const getTotalResult = state => state.totalResults;\nexport const getCurrentPage = state => state.currentPage;\n\nexport const getSearchedfilms= createSelector(getfilms, getSearchValue, (films, searchValue) => {\n  return films.filter(film => film.Title.toLowerCase().includes(searchValue.toLowerCase()));\n});\n\n","import * as mainConstanst from '../reducers/constant'\nimport axios from \"axios\";\nimport {URL} from './secret'\n\nexport const getfilmsAPI = (name,page) => async dispatch => {\n  let url = URL + 's=' + name+'&page='+page;\n  const newfilm = await axios.get(url);\n  if (newfilm.data.Response === \"True\") {\n    dispatch({\n      type: mainConstanst.FETCH_NEW_FILM_SUCCESS,\n      payload: {films:newfilm.data,page}\n    });\n  } else {\n    return dispatch({\n      type: mainConstanst.FETCH_NEW_FILM_ERROR,\n    });\n  }\n};\nexport const getFilm = (IMDbID) => async dispatch => {\n  console.log(IMDbID);\n  let url = URL + 'i=' + IMDbID.slice(2);\n  const newfilm = await axios.get(url);\n  if (newfilm.data.Response === \"True\") {\n    dispatch({\n      type: mainConstanst.GET_FILM,\n      payload: newfilm.data\n    });\n  } else {\n    return dispatch({\n      type: mainConstanst.GET_FILM_ERROR,\n    });\n  }\n};\n\n\nexport const searchfilms = value => {\n  return {\n    type: mainConstanst.SEARCH_FILM,\n    value\n  };\n};\n\n","export const SEARCH_FILM= 'SEARCH_FILM';\nexport const FETCH_NEW_FILM_SUCCESS= 'FETCH_NEW_FILM_SUCCESS';\nexport const FETCH_NEW_FILM_ERROR= 'FETCH_NEW_FILM_ERROR';\nexport const GET_FILM= 'GET_FILM';\nexport const GET_FILM_ERROR= 'GET_FILM_ERROR';\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div>\n      <div className=\"blob blob-0\" />\n      <div className=\"blob blob-1\" />\n      <div className=\"blob blob-2\" />\n      <div className=\"blob blob-3\" />\n      <div className=\"blob blob-4\" />\n      <div className=\"blob blob-5\" />\n    </div>\n  );\n};\n\nexport default Loader;","import React, {Component,Fragment} from \"react\";\nimport Loader from '../Loader/Loader';\nimport './SearchPage.css'\nimport {NavLink} from \"react-router-dom\";\nimport createHistory from 'history/createBrowserHistory'\nconst history = createHistory();\n\nclass searchPage extends Component{\n  componentDidMount() {\n    const location = history.location;\n    if(location && location.search){\n      this.props.onInputChange(location.search.slice(3))\n    }\n  }\n\n  render(){\n    let films5=null;\n    let step = null;\n    const {currentPage,value, films, onInputChange, loaded, total,handleNext5,next,handlePrev5} = this.props;\n    let totalStep =(total/5).toFixed(0);\n    if(next){\n      step= currentPage*2;\n      films5= films.slice(5);\n    }else{\n      step= currentPage*2-1;\n      films5= films.slice(0,5);\n    }\n    console.log('value',value);\n    return (\n      <Fragment>\n        <div className=\"container\">\n          <div className=\"search-box\">\n            <div>Top {films5.length} yours films, total: {total}</div>\n            <div className=\"search-item\">\n              <input\n                type=\"text\"\n                placeholder=\"search film ...\"\n                value={value}\n                onChange={({target}) => onInputChange(target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"filmList\">\n            {films.length ? films5.map((film, index) =>\n              <NavLink  key={index}  to={`/:${film.imdbID}`}>\n                <div className=\"filmItem\">\n                  {film.Poster === 'N/A' ? null : <img className=\"filmImg\" style={{maxWidth: 300}} height=\"350px\" src={film.Poster} alt=\"film-pic\"/>}\n                  <p>{film.Title + \"/\" + film.Year}</p>\n                </div>\n              </NavLink>\n            ) : <div>\n              <h2>waiting for update</h2>\n              <Loader/>\n            </div>\n            }\n          </div>\n          <div className=\"paginationContainer\">\n            <nav className=\"pagination\" role=\"navigation\">\n              <div onClick={()=>handlePrev5()} className=\"prev stepBtn\" href=\"#\">Prev</div>\n              {step>1?<div onClick={()=>handlePrev5()}  className=\"stepBtn\" >{step-1}</div>:null}\n              <div className=\"stepBtn active\" >{step}</div>\n              {total>5?<div onClick={()=>handleNext5()} className=\"stepBtn\" >{step+1}</div>:null}\n              {total>20?<div className=\"stepBtn\">...</div>:null}\n              {total>5?<div className=\"stepBtn\" >{totalStep}</div>:null}\n              <div onClick={()=>handleNext5()} className=\"next stepBtn\">Next</div>\n            </nav>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n};\n\nexport default searchPage;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as mainActions from \"../../actions/mainActions\";\nimport * as selector from \"../../selector\";\nimport {withRouter} from \"react-router\";\nimport './MovieItem.css'\nimport {NavLink} from \"react-router-dom\";\n\nclass MovieItem extends Component {\n\n  componentDidMount() {\n    if (this.props.match)\n      this.props.getFilm(this.props.match.url)\n  }\n\n  render() {\n    let {film} = this.props;\n    console.log('filmMovieItem', film);\n    return (\n      <div className=\"movieContainer\">\n          <div className=\"example-2 card\">\n            <div className=\"wrapper\" style={{background: `url(${film.Poster}) center no-repeat`}}>\n              <div className=\"header\">\n                <div className=\"date\">\n                  <NavLink\n                    exact to=\"/\">\n                    <div className=\"backBtn\">\n                      Back to home\n                    </div>\n                  </NavLink>\n                  <span >Box office: {film.BoxOffice}</span>\n                  <span >{film.DVD}</span>\n                  <span >star:{film.imdbRating}</span>\n                </div>\n\n              </div>\n              <div className=\"data\">\n                <div className=\"content\">\n                  <h1 className=\"title\">{film.Type}: {film.Title}</h1>\n                  <p >{film.Actors}</p>\n                  <p >{film.Plot}</p>\n                  <a href={film.Website} target=\"_blank\" className=\"button\">Read more</a>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n      )\n  }\n}\n\nconst mapStateToProps = state => ({\n  film: selector.getFilm(state),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {...bindActionCreators(mainActions, dispatch)}\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MovieItem));\n","import React, {Component} from 'react';\nimport {Link, Route, Switch} from 'react-router-dom';\nimport {withRouter} from 'react-router';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as selector from './../selector'\nimport * as mainActions from '../actions/mainActions';\nimport Header from \"../components/Header/Header\";\nimport SearchPage from \"../components/SearchPage/SearchPage\";\nimport MovieItem from \"../components/MovieItem/MovieItem\";\nimport createHistory from 'history/createBrowserHistory'\nconst history = createHistory();\n\nclass App extends Component {\n  state = {\n    next5: false\n  };\n  handleSearchFilm = value => {\n    this.props.searchfilms(value);\n  };\n\n  componentDidMount() {\n    let myFilm = '';\n    this.timerID = setInterval(() => {\n      if (this.props.searchValue.length > 2 && myFilm !== this.props.searchValue) {\n        myFilm = this.props.searchValue;\n        console.log('INSIDE2');\n        this.props.getfilmsAPI(this.props.searchValue, this.props.currentPage);\n      }\n    }, 4000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  handleNext5Films = () => {\n    if (this.state.next5) {\n      this.props.getfilmsAPI(this.props.searchValue, this.props.currentPage + 1);\n      this.setState({next5: false})\n    } else {\n      this.setState({next5: !this.state.next5})\n    }\n  };\n  handlePrev5Films = () => {\n    if (this.state.next5) {\n      this.setState({next5: !this.state.next5})\n    } else {\n      if (this.props.currentPage > 1) {\n        this.props.getfilmsAPI(this.props.searchValue, this.props.currentPage - 1);\n        this.setState({next5: true})\n      }\n    }\n  };\n  handleAddNewFilm = () => {\n    this.props.getfilmsAPI(this.props.searchValue);\n  };\n\n  render() {\n    const {loaded, searchValue, searchedfilms, totalResults, currentPage} = this.props;\n    return (\n      <div>\n        {/*<Header/>*/}\n        <Switch>\n          <Route\n            exact path=\"/\"\n            render={() => {\n              return (\n                <SearchPage\n                  loaded={loaded}\n                  films={searchedfilms}\n                  value={searchValue}\n                  next={this.state.next5}\n                  total={totalResults}\n                  currentPage={currentPage}\n                  handleNext5={this.handleNext5Films}\n                  handlePrev5={this.handlePrev5Films}\n                  onInputChange={this.handleSearchFilm}\n                  onAddNewFilm={this.handleAddNewFilm}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/::id\"\n            component={MovieItem}\n          />\n          <Route\n            history={history}\n            path=\"/?q=::id\"\n            component={() =>\n                <SearchPage\n                  loaded={loaded}\n                  films={searchedfilms}\n                  value={searchValue}\n                  next={this.state.next5}\n                  total={totalResults}\n                  currentPage={currentPage}\n                  handleNext5={this.handleNext5Films}\n                  handlePrev5={this.handlePrev5Films}\n                  onInputChange={this.handleSearchFilm}\n                  onAddNewFilm={this.handleAddNewFilm}\n                />\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loaded: selector.getLoadingStatus(state),\n  films: selector.getfilms(state),\n  searchValue: selector.getSearchValue(state),\n  totalResults: selector.getTotalResult(state),\n  searchedfilms: selector.getSearchedfilms(state),\n  currentPage: selector.getCurrentPage(state)\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {...bindActionCreators(mainActions, dispatch)}\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport * as actionTypes from '../reducers/constant'\n\nconst initialState = {\n  films: [],\n  film: {},\n  searchedValue: \"\",\n  loaded: true,\n  errorNewFilm: false,\n  totalResults:0,\n  currentPage:1\n};\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SEARCH_FILM:\n      return {...state, searchedValue: action.value};\n    case actionTypes.FETCH_NEW_FILM_ERROR:\n      return {...state, errorNewFilm: !state.errorNewFilm,totalResults:0};\n    case actionTypes.FETCH_NEW_FILM_SUCCESS:\n      console.log(action.payload);\n      return {...state,films:action.payload.films.Search,loaded: true,totalResults:action.payload.films.totalResults,currentPage:action.payload.page};\n    case actionTypes.GET_FILM:\n      return {...state,film:action.payload};\n    case actionTypes.GET_FILM_ERROR:\n      return {...state};\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(mainReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './containers/App';\nimport {Provider} from 'react-redux';\nimport  * as serviceWorker from './serviceWorker';\nimport store from './reducers/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}